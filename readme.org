#+TITLE: codygman's HCI
* What is this?
** A very minimal verison of my human computer interface
It's for adding new tricky features with less surface area (ex. org keybindings with evil through general where loading is tricky)
** It's not meant to be very useful, it' just a base
* Configuration
** Prevent use-package from installing anything
*** Set ensure-function to nil
    #+begin_src emacs-lisp
      (setq use-package-ensure-function 'ignore)
    #+end_src

*** Set package-archives to nil so there's nothing to install from

    Package should already be there, to add a new one add it to home.nix

    #+begin_src emacs-lisp
      (setq package-archives nil)
    #+end_src
** Package configuration
*** use-package
    #+begin_src emacs-lisp
      (require 'use-package)
    #+end_src
*** org
    #+begin_src emacs-lisp
      (use-package org
        :general
        (my-leader-def
          :states '(normal visual emacs motion)
          :prefix "SPC"
          :keymaps 'override
          :non-normal-prefix "M-SPC"
          :prefix "SPC"
          "ov" 'org-version
          )
        )
    #+end_src
**** org babel
    #+begin_src emacs-lisp
      (use-package ob
        :after ob-restclient
	:config
	(setq org-confirm-babel-evaluate nil)
	(org-babel-do-load-languages
	 'org-babel-load-languages
	 '((emacs-lisp . t)
	   (shell . t)
	   (restclient . t)
	   (haskell . t)
	   ))
	)
    #+end_src
*** general (Best leave this loading near the top)
    #+begin_src emacs-lisp
      (use-package general
	:after which-key
	:init
	(setq evil-want-keybinding nil
	      evil-want-C-d-scroll t
	      evil-want-C-u-scroll t
	      evil-want-integration t
	      )
	:config
	(general-auto-unbind-keys) ;; NOTE not sure this works?
	(general-evil-setup t)
	(general-imap "j"
	  (general-key-dispatch 'self-insert-command
	    :timeout 0.25
	    ;; TODO make this work so jf writes the file when I enter normal mode
	    ;; "j" '(my-write-then-normal-state)
	    "f" 'evil-normal-state))
	(general-create-definer my-leader-def
	  :prefix "C")
	(my-leader-def
	  :states '(normal visual emacs motion)
	  :prefix "SPC"
	  :keymaps 'override
	  :non-normal-prefix "M-SPC"
	  "u"   '(universal-argument :which-key "Universal Argument")
	  "qq" '(save-buffers-kill-terminal :which-key "Quit Emacs")

	  "hf" '(describe-function :which-key "Describe Function")
	  "hk" '(describe-key :which-key "Describe Key")
	  "ha" '(apropos-command :which-key "Apropos Command")

	  ;; window
	  "wm"  '(toggle-maximize-buffer :which-key "maximize buffer")
	  "wh"  '(evil-window-left :which-key "move left")
	  "wj"  '(evil-window-down :which-key "move down a window")
	  "wk"  '(evil-window-up :which-key "move up a window")
	  "wl"  '(evil-window-right :which-key "move right a window")
	  "wv"  '(split-window-right :which-key "split right a window")
	  "ws"  '(split-window-below :which-key "split bottom")
	  )
	)
    #+end_src
*** evil and evil collection
    #+begin_src emacs-lisp
      (use-package evil
        :after general
        :config
        (evil-mode 1)
        :general
        ;; NOTE For some reason general binding is broken in the evil block
        )

      (use-package evil-collection
        :after evil
        :config
        (evil-collection-init))
    #+end_src
    
